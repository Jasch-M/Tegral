plugins {
    id 'com.github.node-gradle.node'
    id 'base'
}

configurations {
    web {
        canBeConsumed = true
        canBeResolved = true
    }
}

def docsInputFiles = [
    'babel.config.js',
    'docusaurus.config.js',
    'sidebars.js'
]

def docsInputDirs = [
    'blog',
    'docs',
    'src',
    'static'
]

task docusaurusStart(type: PnpmTask) {
    args = [ 'start' ]

    for (input in docsInputFiles) {
        inputs.file(input)
    }
    for (input in docsInputDirs) {
        inputs.files(input)
    }

    dependsOn pnpmInstall
}

task docusaurusBuild(type: PnpmTask) {
    args = [
        'build'
    ]

    for (input in docsInputFiles) {
        inputs.file(input)
            .withPropertyName("docsFile-" + input)
            .withPathSensitivity(PathSensitivity.RELATIVE)
    }
    for (input in docsInputDirs) {
        inputs.dir(input)
            .withPropertyName("docsDir-" + input)
            .withPathSensitivity(PathSensitivity.RELATIVE)
    }

    outputs.cacheIf { true }
    outputs.dir(layout.buildDirectory.dir('docusaurus'))
        .withPropertyName("result")

    dependsOn pnpmInstall
}

artifacts {
    web(layout.buildDirectory.dir("docusaurus")) {
        builtBy docusaurusBuild
    }
}
