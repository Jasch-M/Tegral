plugins {
    id 'guru.zoroark.tegral.kotlin-common-conventions'

    id 'com.github.node-gradle.node'

    id 'jacoco'
}

dependencies {
    implementation libs.exposed.core
    implementation libs.exposed.dao
    implementation libs.exposed.jdbc
    implementation libs.exposed.javatime
    implementation libs.sqlite
}

configurations {
    generator
}

sourceSets {
    main {
        kotlin {
            srcDir layout.buildDirectory.dir("prismaGeneratedSrc")
        }
    }
}

tasks.register('prismaGenerate', NpxTask) {
    command = "prisma"
    args = ["generate"]

    inputs.file("prisma/schema.prisma")
    inputs.files(configurations.generator)
    outputs.dir(project.layout.buildDirectory.dir("prismakt-generator"))
}

tasks.register('runGeneratorInternal', JavaExec) {
    mainClass = "guru.zoroark.tegral.prismakt.generator.MainKt"
    classpath = configurations.generator
    standardInput = System.in
}

jacoco {
    applyTo runGeneratorInternal
}

tasks.register('generatorCodeCoveragge', JacocoReport) {
    executionData runGeneratorInternal
    sourceSets sourceSets.main
}

tasks.compileKotlin.dependsOn prismaGenerate
tasks.compileTestKotlin.dependsOn prismaGenerate

license {
    exclude "prismakt/generated/*.kt"
}

test {
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
    }
}
