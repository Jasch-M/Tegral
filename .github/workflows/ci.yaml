name: CI

on:
  push:
    branches: [main]
    tags: ["v*.*.*"]
  pull_request:
    types: [opened, synchronize, reopened]

env:
  BUILD_CACHE_URL: ${{ secrets.BUILD_CACHE_URL }}
  BUILD_CACHE_USERNAME: ${{ secrets.BUILD_CACHE_USERNAME }}
  BUILD_CACHE_PASSWORD: ${{ secrets.BUILD_CACHE_PASSWORD }}

jobs:
  validate-wrapper:
    name: "Validate Gradle wrapper"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: gradle/wrapper-validation-action@v1

  check:
    name: "Run tests & checks"
    runs-on: ubuntu-latest
    needs: [validate-wrapper]
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "11"

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Run checks and tests
        run: ./gradlew check --build-cache -I ci/build-cache.init.gradle

      - name: Upload code coverage to CodeCov
        uses: codecov/codecov-action@v2
        with:
          files: "code-coverage/build/reports/jacoco/testCodeCoverageReport/testCodeCoverageReport.xml"

  check-examples:
    name: "Check examples"
    runs-on: ubuntu-latest
    needs: [validate-wrapper]
    strategy:
      matrix:
        example: ["step-1", "step-2"]
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "11"

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Publish catalog to local Maven repo
        run: "./gradlew :tegral-catalog:publishToMavenLocal --build-cache -I ci/build-cache.init.gradle"

      - name: Run check on example
        run: ./gradlew -p "examples/tutorial/${{ matrix.example }}" check --include-build ../../.. --build-cache -I ../../../ci/build-cache.init.gradle

  build-dokka:
    name: "Generate Dokka files"
    runs-on: ubuntu-latest
    needs: [validate-wrapper]
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "11"

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Generate Dokka documentation
        run: ./gradlew :website:rewriteDokkaLinks --build-cache -I ci/build-cache.init.gradle

      - uses: actions/upload-artifact@v3
        with:
          name: dokka-output
          path: website/build/dokkaHtml
          retention-days: 3

  build-docs:
    name: "Build Docusaurus"
    needs: [validate-wrapper]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Build documentation website
        run: gradle :docs:docusaurusBuild

  build-deploy-website:
    name: Assemble and deploy website
    needs: [validate-wrapper, build-docs, build-dokka, check, check-examples]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "11"

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      # TODO maybe unnecessary
      - uses: actions/setup-node@v3

      - name: Assemble website files
        run: ./gradlew :website:assembleFiles --build-cache -I ci/build-cache.init.gradle

      - name: Deploy to Vercel
        uses: BetaHuhn/deploy-to-vercel-action@v1.9.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          WORKING_DIRECTORY: "website/build/output"
          PR_LABELS: "false"
          PRODUCTION: "${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}"

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v1.2
        with:
          publish-dir: "website/build/output"
          github-token: ${{ secrets.GITHUB_TOKEN }}
          enable-pull-request-comment: true
          enable-commit-comment: true
          overwrites-pull-request-comment: true
          netlify-config-path: ./netlify.toml
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 1

  publish-snapshot:
    name: Publish snapshot
    if: "github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/')"
    runs-on: ubuntu-latest
    needs: [validate-wrapper, check, check-examples]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "11"

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Publish snapshot
        env:
          ORG_GRADLE_PROJECT_mavenCentralSnapshotsUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralSnapshotsPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_PRIVATE_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.GPG_PASSPHRASE }}
        run: ./gradlew -PpublishSnapshot -Psign publish --build-cache -I ci/build-cache.init.gradle

  publish-release:
    name: Publish release
    if: "github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')"
    runs-on: ubuntu-latest
    needs: [validate-wrapper, check, build-deploy-website]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "11"

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Publish release
        env:
          ORG_GRADLE_PROJECT_mavenCentralReleaseUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralReleasePassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_PRIVATE_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.GPG_PASSPHRASE }}
        # No build cache here to be 100% sure that cache weirdness cannot affect the final, definitive jars
        run: ./gradlew -PpublishRelease -Psign publish
